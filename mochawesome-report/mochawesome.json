{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-16T17:32:50.683Z",
    "end": "2021-04-16T17:33:18.230Z",
    "duration": 27547,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1c24469f-83cd-4311-b05d-d476568c410a",
      "title": "",
      "fullFile": "cypress/integration/verify_ui.feature",
      "file": "cypress/integration/verify_ui.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
          "title": "VerifyMyAge",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify About",
              "fullTitle": "VerifyMyAge Verify About",
              "timedOut": null,
              "duration": 7939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fa354c7a-14cb-4733-9097-0eb81bcfd124",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify How It Works",
              "fullTitle": "VerifyMyAge Verify How It Works",
              "timedOut": null,
              "duration": 2691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5cf2a7f8-9832-46ab-9a44-3213d31e35f0",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Pricing",
              "fullTitle": "VerifyMyAge Verify Pricing",
              "timedOut": null,
              "duration": 2645,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "144fcb64-5264-4271-bc60-047725b761ee",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Security",
              "fullTitle": "VerifyMyAge Verify Security",
              "timedOut": null,
              "duration": 2790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9daf1615-2dde-4e02-ac8c-14c6d5c44c76",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Contact",
              "fullTitle": "VerifyMyAge Verify Contact",
              "timedOut": null,
              "duration": 3315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb388215-a24b-4c85-be28-cae5800f6c20",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Get Started",
              "fullTitle": "VerifyMyAge Verify Get Started",
              "timedOut": null,
              "duration": 3365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "594e35b5-58ef-4086-9abb-5332ee1cd3b6",
              "parentUUID": "f07ae98a-0db3-43d4-ad9b-2442e40cb0d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa354c7a-14cb-4733-9097-0eb81bcfd124",
            "5cf2a7f8-9832-46ab-9a44-3213d31e35f0",
            "144fcb64-5264-4271-bc60-047725b761ee",
            "9daf1615-2dde-4e02-ac8c-14c6d5c44c76",
            "cb388215-a24b-4c85-be28-cae5800f6c20",
            "594e35b5-58ef-4086-9abb-5332ee1cd3b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "charts": true,
        "pretty": true
      },
      "version": "4.1.0"
    }
  }
}